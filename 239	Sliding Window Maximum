class Solution {

public:
    
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> slidingMax;
        //slidingMax.reserve(k);
        int length = nums.size();
        int sBeginIndex = 0;
        int sEndIndex = k-1;
        if(length < 1){
            return slidingMax;
        }
        while(sEndIndex <= length-1){
            int index = 0;
            int maxVal = getMax(nums, sBeginIndex, sEndIndex, index);
            slidingMax.push_back(maxVal);
            sBeginIndex++;
            sEndIndex++;
        }
        
        return slidingMax;
    }
    
    int getMax(vector<int>& nums, int i, int j, int& index){
        int max = nums[i];
        while(i<= j){
            if(nums[i] > max){
                max = nums[i];
                index = i;
            }
            i++;
        }
        return max;
    }
};
