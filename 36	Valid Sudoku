class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int xSize = 9, ySize = 9;
        for(int x=0; x< xSize; x++){
            int yCount = 0;
            std::unordered_set<char> cSet;
            for(int y=0; y< ySize; y++){
                if(board[x][y] != '.'){
                    yCount++;
                    cSet.insert(board[x][y]);
                }
            }
            if(yCount != cSet.size()){
                return false;
            }
        }
        
        for(int y=0; y< ySize; y++){
            int xCount = 0;
            std::unordered_set<char> cSet;
            for(int x=0; x< xSize; x++){
                if(board[x][y] != '.'){
                    xCount++;
                    cSet.insert(board[x][y]);
                }
            }
            if(xCount != cSet.size()){
                return false;
            }
        }
        
        for(int i=0; i< 3; i++){
            for(int j=0; j< 3; j++){
                int xyCount = 0;
                std::unordered_set<char> cSet;
                for(int x=3*i; x< 3*i+3; x++){
                    for(int y=3*j; y< 3*j+3; y++){
                        if(board[x][y] != '.'){
                            xyCount++;
                            cSet.insert(board[x][y]);
                        }
                    }
                }
                if(xyCount != cSet.size()){
                    return false;
                }
            }
        }
        
        
        return true;
    }
};
