class Solution {
public:
    string reverseVowels_Old(string s) {
        std::unordered_set<char> vowels{'a','e','i','o','u', 'A', 'E', 'I', 'O', 'U'};
        std::string vowelStr;
        for(auto ch: s){
            if(vowels.find(ch) != vowels.end()){
                vowelStr+=ch;
            }
        }
        
        if(vowelStr.empty()){
            return s;
        }
        
        std::reverse(vowelStr.begin(), vowelStr.end());
        int j = 0;
        
        for(int i=0; i< s.length(); i++){
            if(vowels.find(s[i]) != vowels.end()){
                s[i] = vowelStr[j++];
            }
        }
        return s;
    }
    
    string reverseVowels(string s){
        std::unordered_set<char> vowels{'a','e','i','o','u', 'A', 'E', 'I', 'O', 'U'};
        int len = s.length(), i=0, j = len-1;
        
        while(i<j){
            while(i < j && vowels.find(s[i]) == vowels.end()){
                i++;
            }
            
            while(j >i && vowels.find(s[j]) == vowels.end()){
                j--;
            }
            //std::cout << i << ":" << j << endl;
            std::swap(s[i++], s[j--]);
        }
        return s;
    }
};
