class Solution {
public:
    
    vector<vector<int>> permutations(vector<int>& nums, int n){
        std::vector<std::vector<int>> vecvec;
        if(n == 1){
            std::vector<int> vec(1, nums[0]);
            vecvec.push_back(vec);
            return vecvec;
        }
        vector<vector<int>> prevPerms = permutations(nums, n-1);
        
        for(auto vec: prevPerms){
            for(int i=0; i<= vec.size(); i++){
                std::vector<int> tempVec = vec;
                tempVec.insert(tempVec.begin()+i, nums[n-1]);
                vecvec.push_back(tempVec);
            }
        }
        return vecvec;
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        return permutations(nums, nums.size());
    }
};
