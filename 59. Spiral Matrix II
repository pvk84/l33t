class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        std::vector<std::vector<int>> matrix(n, std::vector<int>(n, 0));
        int N = n;
        int left = 0, top = 0;
        int right = N-1, bottom = N-1;
        
        
        int rem = 0;
        int count = 1;
        while(true){
            if(rem%4 == 0){
                for(int i=top; i <= bottom; i++){
                    //std::cout << matrix[left][i] << std::endl;
                    matrix[left][i] = count;
                    count++;
                }
                left++;
            }else if(rem%4 == 1){
                for(int i=left; i <= right; i++){
                    //std::cout << matrix[i][bottom] << std::endl;
                    matrix[i][bottom] = count;
                    count++;
                }
                bottom--;
            }else if(rem%4 == 2){
                for(int i=bottom; i >= top; i--){
                    //std::cout << matrix[right][i] << std::endl;
                    matrix[right][i] = count;
                    count++;
                }
                right--;
            }else if(rem%4 == 3){
                for(int i=right; i >= left; i--){
                    //std::cout << matrix[i][top] << std::endl;
                    matrix[i][top] = count;
                    count++;
                }
                top++;
            }
            
            rem++;
            if(count > N*N){
                break;
            }
        }
        return matrix;
    }
    
};
