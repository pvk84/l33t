class Queue {
public:
    std::stack<int> pushStack, popStack;
    // Push element x to the back of queue.
    void push(int x) {
        while(!popStack.empty()){
            pushStack.push(popStack.top());
            popStack.pop();
        }
        pushStack.push(x);
    }

    // Removes the element from in front of queue.
    void pop(void) {
        while(!pushStack.empty()){
            popStack.push(pushStack.top());
            pushStack.pop();
        }
        if(!popStack.empty()){
            popStack.pop();
        }
    }

    // Get the front element.
    int peek(void) {
        while(!pushStack.empty()){
            popStack.push(pushStack.top());
            pushStack.pop();
        }
        return popStack.top();
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return (popStack.empty() && pushStack.empty());
    }
};
